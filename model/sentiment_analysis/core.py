from typing import Protocol

from pydantic import BaseModel

"""
Basic components used for sentiment rating.
GPT-based rating has only one attribute: value, whereas
sentiment scores generated by Roberta and FinBert are split into
negative, neutral and positive probabilities
"""


class SentimentRating(BaseModel):
    @property
    def score(self) -> float:
        raise NotImplementedError


class GptRating(SentimentRating):
    value: float

    @property
    def score(self) -> float:
        return round(self.value, 2)


class SplitScoreRating(SentimentRating):
    negative: float
    neutral: float
    positive: float

    @property
    def score(self) -> float:
        return round(-1 * self.negative + 0 * self.neutral + 1 * self.positive, 2)


class ISentimentRater(Protocol):
    def rate(self, text: str) -> SentimentRating:
        ...

    def model_name(self) -> str:
        ...
